# automatically generated by the FlatBuffers compiler, do not modify

# namespace: EventCam

import flatbuffers

class ChangeEvent(object):
    __slots__ = ['_tab']

    # ChangeEvent
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

# /// time in seconds since some reference
    # ChangeEvent
    def Time(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
# /// pixel location column
    # ChangeEvent
    def X(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
# /// pixel location row
    # ChangeEvent
    def Y(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(10))
# /// polarity of the change
    # ChangeEvent
    def Polarity(self): return self._tab.Get(flatbuffers.number_types.Int8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))

def CreateChangeEvent(builder, time, x, y, polarity):
    builder.Prep(8, 16)
    builder.Pad(3)
    builder.PrependInt8(polarity)
    builder.PrependUint16(y)
    builder.PrependUint16(x)
    builder.PrependFloat64(time)
    return builder.Offset()
